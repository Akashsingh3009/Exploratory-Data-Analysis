pip install pandas numpy scikit-learn matplotlib seaborn
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt

# Download the dataset from UCI repository
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/00240/UCI%20HAR%20Dataset.zip"

# Load the data
features = pd.read_csv("UCI HAR Dataset/train/X_train.txt", delim_whitespace=True, header=None)
labels = pd.read_csv("UCI HAR Dataset/train/y_train.txt", header=None, names=['label'])

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(features, labels['label'], test_size=0.2, random_state=42)
# Initialize the RandomForestClassifier
rf_classifier = RandomForestClassifier(n_estimators=100, random_state=42)

# Train the model
rf_classifier.fit(X_train, y_train)
# Make predictions on the test set
y_pred = rf_classifier.predict(X_test)

# Evaluate accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.2f}")

# Classification report and confusion matrix
print("\nClassification Report:\n", classification_report(y_test, y_pred))

# Plot confusion matrix
cm = confusion_matrix(y_test, y_pred)
plt.figure(figsize=(8, 6))
sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=['Walking', 'Upstairs', 'Downstairs', 'Sitting', 'Standing', 'Laying'], yticklabels=['Walking', 'Upstairs', 'Downstairs', 'Sitting', 'Standing', 'Laying'])
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()
